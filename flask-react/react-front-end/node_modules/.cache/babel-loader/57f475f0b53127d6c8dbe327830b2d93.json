{"ast":null,"code":"var _jsxFileName = \"/Users/aaronbasch/Desktop/ddsp_bending/neural-circuit-bending/flask-react/react-front-end/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport viola_sustained_trans from '/Users/aaronbasch/Desktop/ddsp_bending/neural-circuit-bending/flask-react/react-front-end/src/viola_sustained_transformed.wav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [layers, setLayers] = useState({\n    DENSE_0: {\n      WEIGHTS: {\n        transform: '',\n        value: 0,\n        operand: 1\n      },\n      BIASES: {\n        transform: '',\n        value: 0,\n        operand: 1\n      }\n    },\n    DENSE_1: {\n      WEIGHTS: {\n        transform: '',\n        value: 0,\n        operand: 1\n      },\n      BIASES: {\n        transform: '',\n        value: 0,\n        operand: 1\n      }\n    },\n    DENSE_2: {\n      WEIGHTS: {\n        transform: '',\n        value: 0,\n        operand: 1\n      },\n      BIASES: {\n        transform: '',\n        value: 0,\n        operand: 1\n      }\n    },\n    DENSE_3: {\n      WEIGHTS: {\n        transform: '',\n        value: 0,\n        operand: 1\n      },\n      BIASES: {\n        transform: '',\n        value: 0,\n        operand: 1\n      }\n    },\n    DENSE_4: {\n      WEIGHTS: {\n        transform: '',\n        value: 0,\n        operand: 1\n      },\n      BIASES: {\n        transform: '',\n        value: 0,\n        operand: 1\n      }\n    },\n    DENSE_5: {\n      WEIGHTS: {\n        transform: '',\n        value: 0,\n        operand: 1\n      },\n      BIASES: {\n        transform: '',\n        value: 0,\n        operand: 1\n      }\n    },\n    GRU_6: {\n      WEIGHTS: {\n        transform: '',\n        value: 0,\n        operand: 1\n      },\n      RECURRENT_WEIGHTS: {\n        transform: '',\n        value: 0,\n        operand: 1\n      },\n      BIASES: {\n        transform: '',\n        value: 0,\n        operand: 1\n      }\n    },\n    DENSE_7: {\n      WEIGHTS: {\n        transform: '',\n        value: 0,\n        operand: 1\n      },\n      BIASES: {\n        transform: '',\n        value: 0,\n        operand: 1\n      }\n    },\n    DENSE_8: {\n      WEIGHTS: {\n        transform: '',\n        value: 0,\n        operand: 1\n      },\n      BIASES: {\n        transform: '',\n        value: 0,\n        operand: 1\n      }\n    },\n    DENSE_9: {\n      WEIGHTS: {\n        transform: '',\n        value: 0,\n        operand: 1\n      },\n      BIASES: {\n        transform: '',\n        value: 0,\n        operand: 1\n      }\n    },\n    DENSE_10: {\n      WEIGHTS: {\n        transform: '',\n        value: 0,\n        operand: 1\n      },\n      BIASES: {\n        transform: '',\n        value: 0,\n        operand: 1\n      }\n    }\n  });\n  const [audio, setAudio] = useState();\n  const [editedData, setEditedData] = useState();\n  const transformTypes = ['ablation', 'inverse', 'shuffle', 'multiply'];\n\n  const generateTransform = () => {\n    // Simple POST request with a JSON body using axios\n    const article = {\n      'members': layers\n    };\n    axios.post('/generate', article).then(response => article).then(editedData => {\n      setEditedData(article);\n      console.log(article);\n    });\n  };\n\n  function postAudio() {\n    const article = {\n      'members': audio\n    };\n    axios.post('/upload', article).then(response => article).then(editedData => {\n      setEditedData(article);\n      console.log(article);\n    });\n  }\n\n  function Upload() {\n    const handleFileSelected = e => {\n      const files = Array.from(e.target.files);\n\n      if (e.target.files[0]) {\n        setAudio(URL.createObjectURL(e.target.files[0]));\n      }\n\n      console.log(\"files:\", files[0].name);\n    };\n\n    postAudio();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"description\",\n        onChange: handleFileSelected,\n        type: \"file\",\n        accept: \".wav, .mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), audio && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: audio,\n        controls: true,\n        autoplay: true,\n        muted: true,\n        style: {\n          marginLeft: '-50px',\n          transform: 'scale(.7)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n  const drawConnections = width_ => {\n    function numberRange(start, end) {\n      return new Array(end - start).fill().map((d, i) => i + start);\n    }\n\n    const max = 5;\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"connections\",\n      width: width_,\n      children: numberRange(0, max + 1).map(y1_ => numberRange(0, max + 1).map(y2_ => /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"0\",\n        x2: width_,\n        y1: y1_ * (100 / max) + '%',\n        y2: y2_ * (100 / max) + '%',\n        style: {\n          stroke: 'grey',\n          strokeWidth: '1px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  };\n\n  const adjustOperand = (layer_, type, operand_) => {\n    const new_layers = layers;\n    new_layers[layer_][type].operand = operand_.target.value;\n    setLayers({ ...new_layers\n    });\n  };\n\n  const adjustValue = (layer_, type, value_) => {\n    const new_layers = layers;\n    new_layers[layer_][type].value = value_.target.value;\n    setLayers({ ...new_layers\n    });\n    console.log(layers);\n  };\n\n  const adjustTransform = (transform_, layer_, type) => {\n    const new_layers = layers;\n\n    if (new_layers[layer_][type].transform === transform_) {\n      new_layers[layer_][type].transform = '';\n    } else {\n      new_layers[layer_][type].transform = transform_;\n    }\n\n    setLayers({ ...new_layers\n    });\n  };\n\n  const getColor = (transform_, layer_, type) => {\n    if (layers[layer_][type].transform === transform_) {\n      return \"rgb(119, 184, 201)\";\n    } else {\n      return \"black\";\n    }\n  };\n\n  const Recurrent_Layer = layer_ => {\n    return ['WEIGHTS', 'RECURRENT_WEIGHTS', 'BIASES'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chip\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gru\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0',\n                color: 'black',\n                fontSize: '1.2em',\n                fontStyle: 'italic'\n              },\n              children: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"100\",\n              className: \"mainSlider\",\n              id: \"myRange\",\n              onChange: val => adjustValue(layer_, type, val),\n              style: {\n                position: 'absolute',\n                top: '0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), transformTypes.map(transform_ => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"transformType\",\n              style: {\n                margin: '0',\n                color: getColor(transform_, layer_, type)\n              },\n              onClick: () => adjustTransform(transform_, layer_, type),\n              children: transform_\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '13.5px',\n                left: '0'\n              },\n              children: transform_ === 'multiply' && layers[layer_][type].transform === transform_ && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"-100\",\n                max: \"100\",\n                className: \"slider\",\n                id: \"myRange\",\n                onChange: op => adjustOperand(layer_, type, op)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 60\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 61\n    }, this));\n  };\n\n  const Dense_Layer = layer_ => {\n    return ['WEIGHTS', 'BIASES'].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chip\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"layer wb\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0',\n                color: 'black',\n                fontSize: '1.2em',\n                fontStyle: 'italic'\n              },\n              children: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"100\",\n              className: \"mainSlider\",\n              id: \"myRange\",\n              onChange: val => adjustValue(layer_, type, val),\n              style: {\n                position: 'absolute',\n                top: '0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 11\n          }, this), transformTypes.map(transform_ => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"transformType\",\n              style: {\n                margin: '0',\n                color: getColor(transform_, layer_, type)\n              },\n              onClick: () => adjustTransform(transform_, layer_, type),\n              children: transform_\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '13.5px',\n                left: '0'\n              },\n              children: transform_ === 'multiply' && layers[layer_][type].transform === transform_ && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"-100\",\n                max: \"100\",\n                className: \"slider\",\n                id: \"myRange\",\n                onChange: op => adjustOperand(layer_, type, op)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 60\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 41\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'white',\n      height: '100vh',\n      marginTop: '50px',\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description title\",\n            children: \"Network Bending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circuit_board\",\n            style: {\n              justifyContent: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"layer input\",\n                children: Upload()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 13\n              }, this), drawConnections(150)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 13\n            }, this), Object.keys(layers).map(layer_ => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: layer_.slice(0, 5) === 'DENSE' ? 'layer' : 'gru',\n                style: {\n                  justifyContent: 'left'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"description\",\n                  style: {\n                    margin: '0',\n                    color: 'black',\n                    fontSize: '1.5em'\n                  },\n                  children: layer_\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"break\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this), layer_.slice(0, 5) === 'DENSE' ? Dense_Layer(layer_) : Recurrent_Layer(layer_)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), layer_ !== 'OUTPUT' && drawConnections(150)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => generateTransform(),\n            variant: 'Gen',\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/Y3wWHtSbQLP83fnamjVfsRzeGA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aaronbasch/Desktop/ddsp_bending/neural-circuit-bending/flask-react/react-front-end/src/App.js"],"names":["React","useState","useEffect","axios","Container","Button","Row","Col","viola_sustained_trans","App","layers","setLayers","DENSE_0","WEIGHTS","transform","value","operand","BIASES","DENSE_1","DENSE_2","DENSE_3","DENSE_4","DENSE_5","GRU_6","RECURRENT_WEIGHTS","DENSE_7","DENSE_8","DENSE_9","DENSE_10","audio","setAudio","editedData","setEditedData","transformTypes","generateTransform","article","post","then","response","console","log","postAudio","Upload","handleFileSelected","e","files","Array","from","target","URL","createObjectURL","name","marginLeft","drawConnections","width_","numberRange","start","end","fill","map","d","i","max","y1_","y2_","stroke","strokeWidth","adjustOperand","layer_","type","operand_","new_layers","adjustValue","value_","adjustTransform","transform_","getColor","Recurrent_Layer","position","margin","color","fontSize","fontStyle","val","top","left","op","Dense_Layer","background","height","marginTop","minHeight","justifyContent","display","flexWrap","Object","keys","slice"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport './App.css';\nimport axios from 'axios';\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport viola_sustained_trans from '/Users/aaronbasch/Desktop/ddsp_bending/neural-circuit-bending/flask-react/react-front-end/src/viola_sustained_transformed.wav';\n\n\nfunction App() {\n  const [layers, setLayers] = useState({\n    DENSE_0:{WEIGHTS:{transform:'', value:0, operand:1},\n            BIASES:{transform:'', value:0, operand:1}},\n    DENSE_1:{WEIGHTS:{transform:'', value:0, operand:1},\n            BIASES:{transform:'', value:0, operand:1}},\n    DENSE_2:{WEIGHTS:{transform:'', value:0, operand:1},\n            BIASES:{transform:'', value:0, operand:1}},\n    DENSE_3:{WEIGHTS:{transform:'', value:0, operand:1},\n            BIASES:{transform:'', value:0, operand:1}},\n    DENSE_4:{WEIGHTS:{transform:'', value:0, operand:1},\n            BIASES:{transform:'', value:0, operand:1}},\n    DENSE_5:{WEIGHTS:{transform:'', value:0, operand:1},\n            BIASES:{transform:'', value:0, operand:1}},\n    GRU_6:{WEIGHTS:{transform:'', value:0, operand:1},\n            RECURRENT_WEIGHTS:{transform:'', value:0, operand:1},\n            BIASES:{transform:'', value:0, operand:1}},\n    DENSE_7:{WEIGHTS:{transform:'', value:0, operand:1},\n            BIASES:{transform:'', value:0, operand:1}},\n    DENSE_8:{WEIGHTS:{transform:'', value:0, operand:1},\n            BIASES:{transform:'', value:0, operand:1}},\n    DENSE_9:{WEIGHTS:{transform:'', value:0, operand:1},\n            BIASES:{transform:'', value:0, operand:1}},\n    DENSE_10:{WEIGHTS:{transform:'', value:0, operand:1},\n            BIASES:{transform:'', value:0, operand:1}},\n    \n  });\n  const [audio, setAudio] = useState()\n  const [editedData,setEditedData] = useState()\n\n  const transformTypes = ['ablation','inverse','shuffle','multiply']\n\n  const generateTransform = () => {\n    // Simple POST request with a JSON body using axios\n    const article = { 'members': layers}\n    axios.post('/generate', article).then(response => article).then(\n      editedData => {\n        setEditedData(article)\n        console.log(article)\n      }\n    );\n  }\n\n  function postAudio() {\n    const article = { 'members': audio}\n    axios.post('/upload', article).then(response => article).then(\n      editedData => {\n        setEditedData(article)\n        console.log(article)\n      }\n    );\n  }\n  \n  function Upload() { \n    const handleFileSelected = (e) => {\n      const files = Array.from(e.target.files)\n      if (e.target.files[0]) {\n        setAudio(URL.createObjectURL(e.target.files[0]));\n      }\n      console.log(\"files:\", files[0].name)\n    }\n    postAudio()\n    return (\n      <div>\n      <input className='description' onChange={handleFileSelected} type=\"file\" accept='.wav, .mp3'/>\n      {audio&&\n        <audio src={audio} controls autoplay muted style={{marginLeft:'-50px', transform: 'scale(.7)'}}/>}\n      </div>\n    )\n  }\n\n  const drawConnections = (width_) => {\n    function numberRange (start, end) {\n      return new Array(end - start).fill().map((d, i) => i + start);\n    }\n    const max = 5\n    return (\n      <svg className='connections' width={width_}>\n      {numberRange(0,max+1).map((y1_) => \n          numberRange(0,max+1).map((y2_) =>\n            (\n              <line x1=\"0\" x2={width_} y1={y1_*(100/max)+'%'} y2={y2_*(100/max)+'%'}  \n                  style={{stroke:'grey', strokeWidth:'1px'}}/>\n            )\n          )\n        )}\n        \n      </svg>\n    )\n  }\n\n  const adjustOperand = (layer_,type,operand_) => {\n    const new_layers = layers\n    new_layers[layer_][type].operand = operand_.target.value\n    setLayers({...new_layers})\n  }\n\n  const adjustValue = (layer_,type,value_) => {\n    const new_layers = layers\n    new_layers[layer_][type].value = value_.target.value\n    setLayers({...new_layers})\n    console.log(layers)\n  }\n\n  const adjustTransform = (transform_,layer_,type) => {\n    const new_layers = layers\n    if(new_layers[layer_][type].transform===transform_){\n      new_layers[layer_][type].transform = ''\n    }else{\n      new_layers[layer_][type].transform = transform_\n    }\n    setLayers({...new_layers})\n  }\n\n  const getColor = (transform_,layer_,type) => {\n    if( layers[layer_][type].transform===transform_){\n      return \"rgb(119, 184, 201)\"\n    }else{\n      return \"black\"\n    }\n  }\n  const Recurrent_Layer = (layer_) => {\n    return (\n      ['WEIGHTS','RECURRENT_WEIGHTS','BIASES'].map((type)=>(<div className='chip'>\n\n        <div className='gru' >\n        <div className='description'>\n          <div style={{position:'relative'}}>\n          <p style={{margin:'0', color:'black',fontSize:'1.2em', fontStyle:'italic'}}>\n            {type}\n          </p>\n          <input type=\"range\" min=\"1\" max=\"100\" className=\"mainSlider\" id=\"myRange\" onChange={(val)=>adjustValue(layer_,type,val)} style={{position:'absolute', top:'0'}}/>\n          </div>\n          {transformTypes.map((transform_)=>(\n            <div style={{position:'relative'}}>\n              <p className='transformType'\n                style={{ margin:'0', color:getColor(transform_,layer_,type)}}\n                onClick={()=>adjustTransform(transform_,layer_,type)}>\n                  {transform_}\n              </p>\n              <div style={{position:'absolute', top:'13.5px', left:'0'}}>\n              {transform_==='multiply'&&\n              layers[layer_][type].transform===transform_&&<input type=\"range\" min=\"-100\" max=\"100\" className=\"slider\" id=\"myRange\" onChange={(op)=>adjustOperand(layer_,type,op)}/>}\n              </div>\n              </div>\n            ))}\n            \n          \n        </div>\n        \n\n\n      </div>\n      \n      </div>))\n\n    )\n  }\n\n  const Dense_Layer = (layer_) => {\n    return (\n      ['WEIGHTS','BIASES'].map((type)=>(<div className='chip'>\n\n        <div className='layer wb'>\n        <div className='description'>\n          <div style={{position:'relative'}}>\n          <p style={{margin:'0', color:'black',fontSize:'1.2em', fontStyle:'italic'}}>\n            {type}\n          </p>\n          <input type=\"range\" min=\"1\" max=\"100\" className=\"mainSlider\" id=\"myRange\" onChange={(val)=>adjustValue(layer_,type,val)} style={{position:'absolute', top:'0'}}/>\n          </div>\n          {transformTypes.map((transform_)=>(\n            <div style={{position:'relative'}}>\n              <p className='transformType'\n                style={{ margin:'0', color:getColor(transform_,layer_,type)}}\n                onClick={()=>adjustTransform(transform_,layer_,type)}>\n                  {transform_}\n              </p>\n              <div style={{position:'absolute', top:'13.5px', left:'0'}}>\n              {transform_==='multiply'&&\n              layers[layer_][type].transform===transform_&&<input type=\"range\" min=\"-100\" max=\"100\" className=\"slider\" id=\"myRange\" onChange={(op)=>adjustOperand(layer_,type,op)}/>}\n              </div>\n              </div>\n            ))}\n            \n          \n        </div>\n        \n\n\n      </div>\n      \n      </div>))\n\n    )\n  }\n\n  return (\n    <div style={{background: 'white', height: '100vh', marginTop: '50px',\n    minHeight : '100vh'}}>\n      <Container>\n        <Row>\n          \n          <Col md={3}>\n              <p className='description title'>\n                Network Bending\n              </p>\n\n              \n          </Col>\n\n          <Col>\n          \n            <div className='circuit_board' style={{justifyContent:'center'}}>\n            <div style={{display:'flex',flexWrap:'wrap',marginTop:'20px'}}>\n  \n            <div className='layer input' >\n            {Upload()}\n            </div>\n            {drawConnections(150)}\n            </div>\n                {Object.keys(layers).map((layer_)=>(\n                  <div style={{display:'flex',flexWrap:'wrap',marginTop:'20px'}}>\n                  <div className={layer_.slice(0, 5)==='DENSE'? \n                        'layer':'gru'} style={{justifyContent:'left'}}>\n                    <p className='description' style={{margin:'0', color:'black',fontSize:'1.5em'}}>{layer_}</p>\n                    <div className='break'></div>\n                    {layer_.slice(0, 5)==='DENSE'? \n                        Dense_Layer(layer_):Recurrent_Layer(layer_)}\n                    </div>\n                    {layer_!=='OUTPUT' && drawConnections(150)}\n                    </div>\n                  \n                ))}\n               \n              <p className='break'></p>\n              \n            </div>\n            <Button onClick={() => generateTransform()} variant={'Gen'}>Generate</Button>\n          </Col>\n        \n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}