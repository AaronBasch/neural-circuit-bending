{"ast":null,"code":"var _jsxFileName = \"/Users/aaronbasch/Desktop/flask-react/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([{}]);\n  const [editedData, setEditedData] = useState([{}]);\n  const [color, setColor] = useState([{}]);\n  const [transform, setTransform] = useState([{}]);\n  useEffect(() => {\n    fetch(\"/members\").then(res => res.json()).then(data => {\n      setData(data);\n      console.log(data);\n    });\n  }, [editedData]);\n  useEffect(() => {\n    switch (transform) {\n      case 'Mult':\n        setColor('success');\n        break;\n\n      case 'Inv':\n        setColor('danger');\n        break;\n\n      default:\n        break;\n    }\n  }, [transform]);\n\n  const editArr = i => {\n    // Simple POST request with a JSON body using axios\n    const article = {\n      'members': data.members\n    };\n    article.members[i] += 1;\n    axios.post('/members', article).then(response => article).then(editedData => {\n      setEditedData(article);\n      console.log(article);\n    });\n  };\n\n  const adjustTransform = type => {\n    transform => {\n      setTransform(type);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: color,\n          id: \"dropdown-basic\",\n          children: \"Dropdown Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: adjustTransform('Gate'),\n            children: \"Gate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: adjustTransform('Inv'),\n            children: \"Invert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: adjustTransform('Mult'),\n            children: \"Multiplication\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: typeof data.members === 'undefined' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this) : data.members.map((member, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => editArr(i),\n        children: member\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vfEINsqQzZhx8ECVQNZWj0ISqOQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aaronbasch/Desktop/flask-react/client/src/App.js"],"names":["React","useState","useEffect","axios","Dropdown","App","data","setData","editedData","setEditedData","color","setColor","transform","setTransform","fetch","then","res","json","console","log","editArr","i","article","members","post","response","adjustTransform","type","map","member"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n\n  const [data,setData] = useState([{}])\n  const [editedData,setEditedData] = useState([{}])\n  const [color, setColor] = useState([{}])\n  const [transform, setTransform] = useState([{}])\n\n  useEffect(() => {\n    fetch(\"/members\").then(\n      res => res.json()\n    ).then(\n      data => {\n        setData(data)\n        console.log(data)\n      }\n    )\n  },[editedData])\n\n\n  useEffect(() => {\n    switch(transform){\n      case 'Mult':\n        setColor('success')\n        break\n      case 'Inv':\n        setColor('danger')\n        break\n      default:\n        break\n    }\n\n\n  },[transform])\n\n  const editArr = (i) => {\n    // Simple POST request with a JSON body using axios\n    const article = { 'members': data.members};\n    article.members[i] += 1\n    axios.post('/members', article).then(response => article).then(\n      editedData => {\n        setEditedData(article)\n        console.log(article)\n      }\n    );\n  }\n\n  const adjustTransform = (type) => {\n    transform => {\n      setTransform(type)\n    }\n  }\n\n  return (\n    <div>\n      <div>\n      <Dropdown>\n        <Dropdown.Toggle variant={color} id=\"dropdown-basic\">\n          Dropdown Button\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item onClick = {adjustTransform('Gate')} >Gate</Dropdown.Item>\n          <Dropdown.Item onClick = {adjustTransform('Inv')}>Invert</Dropdown.Item>\n          <Dropdown.Item onClick = {adjustTransform('Mult')}>Multiplication</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n</div>\n    <div>\n      {(typeof data.members === 'undefined') ? (\n        <p>Loading...</p>\n      ) : (\n        data.members.map((member, i ) => (\n       \n          <button key={i} onClick={() => editArr(i)}>{member}</button>\n          \n        ))\n      )}\n    </div>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}